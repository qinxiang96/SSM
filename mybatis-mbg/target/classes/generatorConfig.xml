<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <!--
        mybatis逆向工程配置说明详见官网：http://mybatis.org/generator/running/runningWithMaven.html
        mybatis 标签属性说明：http://mybatis.org/generator/configreference/xmlconfig.html#
    -->
    <!-- targetRuntime: MyBatis3DynamicSql/MyBatis3/MyBatis3Simple  -->
    <context id="DB2Table" targetRuntime="MyBatis3">
        <!-- 生成的Java文件的编码 -->
        <!--        <property name="javaFileEncoding" value="UTF-8"/>-->
        <!--        &lt;!&ndash; 格式化java代码 &ndash;&gt;-->
        <!--        <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter" />-->
        <!--        &lt;!&ndash; 格式化XML代码 &ndash;&gt;-->
        <!--        <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter" />-->
        <!--        &lt;!&ndash;添加分隔符&ndash;&gt;-->
        <!--        <property name="beginningDelimiter" value="'"></property>-->
        <!--        <property name="endingDelimiter" value="'"></property>-->
        <!--        &lt;!&ndash;默认生成getter/setter方法，使用插件忽略生成getter/setter方法&ndash;&gt;-->
        <!--        &lt;!&ndash;<plugin type="com.mybatis.plugin.IngoreSetterAndGetterPlugin" />&ndash;&gt;-->
        <!--        &lt;!&ndash;用于在实体类中实现java.io.Serializable接口&ndash;&gt;-->
        <!--        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"></plugin>-->
        <!--        &lt;!&ndash;用于重写equals 和 hashCode 方法&ndash;&gt;-->
        <!--        <plugin type="org.mybatis.generator.plugins.EqualsHashCodePlugin">-->
        <!--            <property name="useEqualsHashCodeFromRoot" value="true"/>-->
        <!--        </plugin>-->
        <!--        &lt;!&ndash;用于生成 toString 方法&ndash;&gt;-->
        <!--        <plugin type="org.mybatis.generator.plugins.ToStringPlugin">-->
        <!--            <property name="useToStringFromRoot" value="true"/>-->
        <!--        </plugin>-->
        <!--        &lt;!&ndash;生成注释信息的配置&ndash;&gt;-->
        <!--        <commentGenerator>-->
        <!--            &lt;!&ndash;阻止生成注释，默认为false&ndash;&gt;-->
        <!--            <property name="suppressAllComments" value="true"></property>-->
        <!--            &lt;!&ndash;阻止生成的注释包含时间戳，默认为false&ndash;&gt;-->
        <!--            <property name="suppressDate" value="true"></property>-->
        <!--            &lt;!&ndash;注释是否添加数据库表的备注信息，默认为false&ndash;&gt;-->
        <!--            <property name="addRemarkComments" value="true"></property>-->
        <!--        </commentGenerator>-->
        <!--数据库连接信息-->
        <jdbcConnection driverClass="com.mysql.cj.jdbc.Driver"
                        connectionURL="jdbc:mysql://localhost:3306/ssm?serverTimezone=UTC"
                        userId="root"
                        password="mysql"/>
        <!--javaTypeResolver:节点用于指定和配置 Java 类型解析器。-->
        <!--        <javaTypeResolver>-->
        <!--            &lt;!&ndash;默认的解析器可能会将数据库类型 decimal 或 numberic 解析为Short、Integer、Long等 Java 类型，&ndash;&gt;-->
        <!--            <property name="forceBigDecimals" value="ture" />-->
        <!--            &lt;!&ndash;是否不强制将数据库类型 date, time 和 timestamp 解析为 Date;-->
        <!--                默认为false，如果为true，-->
        <!--                解析规则将变成：date -> LocalDate，time -> LocalTime，timestamp -> LocalDateTime&ndash;&gt;-->
        <!--            <property name="useJSR310Types" value="true"/>-->
        <!--        </javaTypeResolver>-->
        <!--javaModelGenerator : 节点用于配置实体类生成器-->
        <!--targetPackage：生成实体类存放的包名 targetProject：指定目标项目路径，可以使用绝对路径或者相对路径-->
        <javaModelGenerator targetPackage="com.flora.mybatis.pojo" targetProject="src/main/java">
            <!-- constructorBased为true就会使用构造方法入参，为false使用setter方法入参，默认为false -->
            <!--<property name="constructorBased" value="false"></property>-->
            <!--enableSubPackages 是否在targetPackage基础上生成子包。默认为false。当为true时，会将表所在 schema 名作为子包名-->
            <property name="enableSubPackages" value="true"/>
            <!--immutable：用于配置实体类属性是否可变，如果为true，不管constructorBased设置，都会使用构造方法入参不会生成setter方法。
            如果为false实体类属性可以改变，默认为false-->
            <!--<property name="immutable" value="false"></property>-->
            <!--设置所有实体类的基类-->
            <!--<property name="rootClass" value="类的全限定名"></property>-->
            <!--在setter方法中是否对传入字符串进行 trim 操作-->
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>
        <!--sqlMapGenerator : 节点用于配置 XML 生成器-->
        <sqlMapGenerator targetPackage="com.flora.mybatis.mapper" targetProject="src/main/resources">
            <!--enableSubPackages ： 是否在targetPackage基础上生成子包。默认为false。当为true时，会将表所在 schema 名作为子包名-->
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>
        <!-- javaClientGenerator：最多配置一个，用于生成mapper接口
            MyBatis3：ANNOTATEDMAPPER、MIXEDMAPPER、XMLMAPPER
            MyBtais3Simple：ANNOTATEDMAPPER、XMLMAPPER
        -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.flora.mybatis.mapper" targetProject="src/main/java">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>
        <!--表的配置-->
        <table tableName="t_emp" domainObjectName="Emp"></table>
        <table tableName="t_Dept" domainObjectName="Dept"></table>
    </context>
</generatorConfiguration>